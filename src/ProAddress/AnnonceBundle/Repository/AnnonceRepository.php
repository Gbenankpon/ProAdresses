<?php

namespace ProAddress\AnnonceBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AnnonceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnnonceRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByCatCp($cat,$cp,$page){
        if ($page < 1) {
            throw new \InvalidArgumentException('L\'argument $page ne peut
être inférieur à 1 (valeur : "'.$page.'").');
        }
        if($cp == 'oo'){
            $qb = $this->createQueryBuilder('a');
            $qb ->join('a.acategorie', 'c')
                //->where($qb->expr()->in('c.nom', $ar))
                ->where('c.nom= :cat')
                ->setParameter('cat',$cat)
                //->orderBy('a.date', 'desc')
                ->getQuery();
            // On définit l'article à partir duquel commencer la liste
            $qb ->setFirstResult(($page-1) * 10)
                // Ainsi que le nombre d'articles à afficher
                ->setMaxResults(10);
            // Enfin, on retourne l'objet Paginator correspondant à la requête construite
            // (n'oubliez pas le use correspondant en début de fichier)
            return new Paginator($qb);
        }
        elseif ($cat === "all"){
            $qb = $this->createQueryBuilder('a');
            $qb ->join('a.pays','p')
                ->where('p.code= :cp')
                ->setParameter('cp',$cp)
                ->getQuery();
            $qb ->setFirstResult(($page-1) * 10)
                ->setMaxResults(10);
            return new Paginator($qb);
        }
        //$ar = array($cat);
        $qb = $this->createQueryBuilder('a');
        $qb ->join('a.acategorie', 'c')
            ->join('a.pays','p')
            //->where($qb->expr()->in('c.nom', $ar))
            ->where('c.nom= :cat')
                ->setParameter('cat',$cat)
            ->andWhere('p.code= :cp')
                ->setParameter('cp',$cp)
            //->orderBy('a.date', 'desc')
            ->getQuery();
        // On définit l'article à partir duquel commencer la liste
        $qb ->setFirstResult(($page-1) * 10)
            // Ainsi que le nombre d'articles à afficher
            ->setMaxResults(10);
        // Enfin, on retourne l'objet Paginator correspondant à la requête construite
        // (n'oubliez pas le use correspondant en début de fichier)
        return new Paginator($qb);
    }
    /*public function findByCatCp($cat,$cp,$page){

        $ar = array($cat);
        //$arr = array($cp);
        $qb = $this->createQueryBuilder('a');
        $qb ->join('a.acategorie', 'c')
            ->join('a.pays','p')
            //->where($qb->expr()->in('c.nom', $ar))
            //->where($qb->expr()->in('p.code', $arr))
            ->where('c.nom= :cat')
                ->setParameter('cat',$cat)
            ->andWhere('p.code= :cp')
                ->setParameter('cp',$cp)
            ->orderBy('a.date', 'desc');

        return $qb->getQuery()
            ->getResult();
    }*/
}
